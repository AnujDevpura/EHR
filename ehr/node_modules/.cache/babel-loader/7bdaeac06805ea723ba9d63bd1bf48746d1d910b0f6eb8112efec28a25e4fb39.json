{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anujd\\\\DTL\\\\ehr\\\\src\\\\components\\\\login.js\",\n  _s = $RefreshSig$();\n// Login.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [role, setRole] = useState(null); // State to keep track of the role\n\n  // Function to handle button click\n  const handleRoleSelection = selectedRole => {\n    setRole(selectedRole); // Update the role based on the selected button\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    style: {\n      textAlign: 'center',\n      padding: '50px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Choose your role\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), !role ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleRoleSelection('Doctor'),\n        style: buttonStyle,\n        children: \"Doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleRoleSelection('Patient'),\n        style: buttonStyle,\n        children: \"Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"You are logged in as: \", role]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n// Style for the buttons\n_s(Login, \"T/z4/POHpqrT7RSruWe/k983y8I=\");\n_c = Login;\nconst buttonStyle = {\n  padding: '10px 20px',\n  fontSize: '18px',\n  margin: '10px',\n  cursor: 'pointer',\n  backgroundColor: '#4CAF50',\n  color: 'white',\n  border: 'none',\n  borderRadius: '5px'\n};\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","role","setRole","handleRoleSelection","selectedRole","className","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","buttonStyle","_c","fontSize","margin","cursor","backgroundColor","color","border","borderRadius","$RefreshReg$"],"sources":["C:/Users/anujd/DTL/ehr/src/components/login.js"],"sourcesContent":["// Login.js\r\nimport React, { useState } from 'react';\r\n\r\nconst Login = () => {\r\n  const [role, setRole] = useState(null); // State to keep track of the role\r\n\r\n  // Function to handle button click\r\n  const handleRoleSelection = (selectedRole) => {\r\n    setRole(selectedRole); // Update the role based on the selected button\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\" style={{ textAlign: 'center', padding: '50px' }}>\r\n      <h1>Choose your role</h1>\r\n\r\n      {/* Show role selection buttons */}\r\n      {!role ? (\r\n        <div>\r\n          <button\r\n            onClick={() => handleRoleSelection('Doctor')}\r\n            style={buttonStyle}\r\n          >\r\n            Doctor\r\n          </button>\r\n          <button\r\n            onClick={() => handleRoleSelection('Patient')}\r\n            style={buttonStyle}\r\n          >\r\n            Patient\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h2>You are logged in as: {role}</h2>\r\n          {/* You can add further logic here depending on what happens after role selection */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Style for the buttons\r\nconst buttonStyle = {\r\n  padding: '10px 20px',\r\n  fontSize: '18px',\r\n  margin: '10px',\r\n  cursor: 'pointer',\r\n  backgroundColor: '#4CAF50',\r\n  color: 'white',\r\n  border: 'none',\r\n  borderRadius: '5px',\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExC;EACA,MAAMO,mBAAmB,GAAIC,YAAY,IAAK;IAC5CF,OAAO,CAACE,YAAY,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,oBACEN,OAAA;IAAKO,SAAS,EAAC,iBAAiB;IAACC,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC/EX,OAAA;MAAAW,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAGxB,CAACZ,IAAI,gBACJH,OAAA;MAAAW,QAAA,gBACEX,OAAA;QACEgB,OAAO,EAAEA,CAAA,KAAMX,mBAAmB,CAAC,QAAQ,CAAE;QAC7CG,KAAK,EAAES,WAAY;QAAAN,QAAA,EACpB;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTf,OAAA;QACEgB,OAAO,EAAEA,CAAA,KAAMX,mBAAmB,CAAC,SAAS,CAAE;QAC9CG,KAAK,EAAES,WAAY;QAAAN,QAAA,EACpB;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,gBAENf,OAAA;MAAAW,QAAA,eACEX,OAAA;QAAAW,QAAA,GAAI,wBAAsB,EAACR,IAAI;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAElC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;;AAED;AAAAb,EAAA,CAtCMD,KAAK;AAAAiB,EAAA,GAALjB,KAAK;AAuCX,MAAMgB,WAAW,GAAG;EAClBP,OAAO,EAAE,WAAW;EACpBS,QAAQ,EAAE,MAAM;EAChBC,MAAM,EAAE,MAAM;EACdC,MAAM,EAAE,SAAS;EACjBC,eAAe,EAAE,SAAS;EAC1BC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE,MAAM;EACdC,YAAY,EAAE;AAChB,CAAC;AAED,eAAexB,KAAK;AAAC,IAAAiB,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}